<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Zedapp | SequenceIQ Blog]]></title>
  <link href="http://blog.sequenceiq.com/blog/categories/zedapp/atom.xml" rel="self"/>
  <link href="http://blog.sequenceiq.com/"/>
  <updated>2015-02-02T18:07:58+00:00</updated>
  <id>http://blog.sequenceiq.com/</id>
  <author>
    <name><![CDATA[SequenceIQ]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Edit files in Docker containers]]></title>
    <link href="http://blog.sequenceiq.com/blog/2014/09/24/edit-files-docker/"/>
    <updated>2014-09-24T13:53:04+00:00</updated>
    <id>http://blog.sequenceiq.com/blog/2014/09/24/edit-files-docker</id>
    <content type="html"><![CDATA[<p>I wish I get 1 dollar each time I install vi in a docker container &hellip; I wanted
an easier way to edit files in a running docker container. First of all try to
<strong>avoid</strong> editing files at all, as it is against the container philosophy
(see the last paragraph).</p>

<p>But if you have a valid reason, here comes the how-to.</p>

<h2>Why Zedapp</h2>

<p>Most of the time I use either vi or <a href="https://atom.io/">Atom</a>, but a few months
ago I stumbled upon <a href="http://zedapp.org/">Zedapp</a> an opinionated editor. It aims to
reduce cognitive load while editing, by simplifying things, like deliberately
not using tabs.</p>

<p>It stands out with its <strong>first-class support of remote editing</strong> let it be a
remote server, or even directly editing github repositories.</p>

<p>Zedapp just reached version 1.0 and if you like it, consider help Zef Hemmel
at <a href="https://gratipay.com/zefhemel/">gratipay</a>, who was brave enough to quit his
regular job, and work full time on an open-source project!</p>

<h2>Install Zedapp</h2>

<p>You can use zedapp as a <em>chrome plugin</em> or a <em>standalone</em> app. Downloads are
available at: <a href="http://zedapp.org/download/">zedapp.org</a>. I recommend to
go for the <strong>standalone</strong> version.</p>

<!-- more -->


<h2>Install zedrem</h2>

<p>For <a href="http://zedapp.org/features/edit-remote-files/">remote editing</a>,
you need zedrem, a small process serving files to be edited in Zedapp.
Zedrem is packaged into a docker image:
<a href="https://github.com/sequenceiq/docker-zedapp">sequenceiq/zedapp</a></p>

<p>To start a local zed-server, and zed-client in the target container, there
is a helper script: <strong>zed</strong></p>

<p>To install the docker image and the shell script run this:
<code>
docker run --rm \
  -v /usr/local/bin:/target \
  -v /usr/local/bin/docker:/usr/local/bin/docker \
  -v /var/run/docker.sock:/var/run/docker.sock \
  sequenceiq/zedapp
</code></p>

<p>Actually there is only a single binary called <strong>zedrem</strong>, i just use the
terminology: zed-server and zed-client to
distinguish when you use it with or without the <code>--server</code> option.</p>

<p>Now you are ready to start a zedrem session, to edit files in Zedapp which are
inside of a Docker container&rsquo;s directory.</p>

<h2>Start a zedrem session</h2>

<p>To start a zedrem client in a container
<code>
zed &lt;container&gt; &lt;directory&gt;
</code></p>

<p>This will:
&ndash; start a <code>zedrem-server</code> if not already running.
&ndash; copy and start <code>zedrem-client</code> into the selected container and print out
  the zedrem session&rsquo;s <strong>remote-url</strong>.</p>

<p>Navigate to the project list window by: <code>Command-Shift-O</code>/<code>Ctrl-Shift-O</code>. Select
 <code>Remote Folder</code>, enter the remote-url into <code>Zedrem URL</code> input field and press
 <code>Open</code>.</p>

<p>Thats all enyoj! All the following paragraphs are for the curious only.</p>

<h2>Boot2docker helper function</h2>

<p>The <code>Install zedrem</code> step should have detected that you are using Boot2docker,
and instructed you to create a helper function, but in case you missed it, or
for reference:</p>

<p><code>
zed() { boot2docker ssh "sudo zed $@" ; }
</code>
This is needed as the helper script called <code>zed</code> is installed inside of
Boot2docker, so you need the ususal <code>boot2docker ssh</code> workaround.</p>

<p>after that you can issue directly on OSX:
<code>
zed &lt;container&gt; &lt;directory&gt;
</code></p>

<h2>Local zedrem server.</h2>

<p>By default when you want to use Zedapp for remote editing, you need two
other components then Zedapp:</p>

<ul>
<li><strong>zedrem-server</strong> Zedapp gets file content, and sends edit commands
on webservices protocol. It maintains sessions with zedrem-clients.</li>
<li><strong>zedrem-client</strong> a small process serving files from a specified directory.</li>
</ul>


<p>When you use zedrem-client via the official server, all the editing commands/content
travel around the blobe:</p>

<p><img src="https://raw.githubusercontent.com/sequenceiq/docker-zedapp/master/images/zed-remote.png" alt="zedrem remote" /></p>

<p>Compare it with the dockerized local server setup, which is more quick and
secure:
<img src="https://raw.githubusercontent.com/sequenceiq/docker-zedapp/master/images/zed-docker.png" alt="zedrem docker" /></p>

<h2>nsenter</h2>

<p>You might wonder about the step: <strong>copy zedrem into the container</strong>. How is it
possible? Docker&rsquo;s <code>cp</code> command only supportts the other direction: copy from a
container into a local dir.</p>

<p>There is an <a href="https://github.com/docker/docker/issues/5846">open issue</a>, so it
will be fixed soon, but meanwhile you can use nsenter to the rescue. Jérôme
Petazzoni prepared us a canned <a href="https://github.com/jpetazzo/nsenter">nsenter</a>
with the helper script: <code>docker-enter</code>. We can missuse docker-enter to copy
a file from local fs into the container by:</p>

<p><code>
cat local-file | docker-enter $container sh -c 'cat&gt;/zedrem'
</code></p>

<p>btw: <code>docker exec</code> is already merged into the master branch, so it will replace
nsenter completely.</p>

<h2>Don&rsquo;t do this at all</h2>

<p>Let&rsquo;s make it clear, that most of the time you don&rsquo;t need this.
First of all editing files in a container, other than development or debug
considered bad practice.</p>

<p>You find yourself editing nginx config files? Don&rsquo;t do it, use the great generic
<a href="https://github.com/progrium/nginx-appliance">nginx appliance</a> from Jeff Lindsay.</p>

<p>If you <strong>really</strong> need to edit files in a docker container, just use volumes.</p>

<p>This process comes handy if you&rsquo;ve already started a container, and the file in
question doesn&rsquo;t sits on a volume. [30]</p>
]]></content>
  </entry>
  
</feed>
